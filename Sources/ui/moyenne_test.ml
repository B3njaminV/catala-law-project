
(** This file has been generated by the Catala compiler, do not edit! *)

open Runtime_ocaml.Runtime

[@@@ocaml.warning "-4-26-27-32-41-42"]


module Moyenne = struct
  type t = {moy: decimal}
end

module Moyenne_in = struct
  type t = unit
end


let moyenne (moyenne_in: Moyenne_in.t) : Moyenne.t =
  let notes_: integer array =
    try
      (handle_default
         {filename = "moyenne_test.catala_fr"; start_line=6; start_column=11;
           end_line=6; end_column=16;
           law_headings=["Code Catala"; "Calcul de Moyenne"]}
         ([|(fun (_: unit) ->
               handle_default
                 {filename = "moyenne_test.catala_fr"; start_line=6;
                   start_column=11; end_line=6; end_column=16;
                   law_headings=["Code Catala"; "Calcul de Moyenne"]} (
                 [||]) (fun (_: unit) -> true)
                 (fun (_: unit) ->
                    [|(integer_of_string "11"); (integer_of_string "12");
                      (integer_of_string "13"); (integer_of_string "14");
                      (integer_of_string "15")|]))|])
         (fun (_: unit) -> false) (fun (_: unit) -> raise EmptyError))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "moyenne_test.catala_fr"; start_line=6; start_column=11;
        end_line=6; end_column=16;
        law_headings=["Code Catala"; "Calcul de Moyenne"]})) in
  let total_: integer =
    try
      (handle_default
         {filename = "moyenne_test.catala_fr"; start_line=8; start_column=11;
           end_line=8; end_column=16;
           law_headings=["Code Catala"; "Calcul de Moyenne"]}
         ([|(fun (_: unit) ->
               handle_default
                 {filename = "moyenne_test.catala_fr"; start_line=8;
                   start_column=11; end_line=8; end_column=16;
                   law_headings=["Code Catala"; "Calcul de Moyenne"]} (
                 [||]) (fun (_: unit) -> true)
                 (fun (_: unit) ->
                    o_reduce
                      (fun (sum1_: integer) (sum2_: integer) ->
                         o_add_int_int sum1_ sum2_) (integer_of_string "0")
                      (o_map (fun (i_: integer) -> i_) notes_)))|])
         (fun (_: unit) -> false) (fun (_: unit) -> raise EmptyError))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "moyenne_test.catala_fr"; start_line=8; start_column=11;
        end_line=8; end_column=16;
        law_headings=["Code Catala"; "Calcul de Moyenne"]})) in
  let nb_notes_: integer =
    try
      (handle_default
         {filename = "moyenne_test.catala_fr"; start_line=7; start_column=11;
           end_line=7; end_column=19;
           law_headings=["Code Catala"; "Calcul de Moyenne"]}
         ([|(fun (_: unit) ->
               handle_default
                 {filename = "moyenne_test.catala_fr"; start_line=7;
                   start_column=11; end_line=7; end_column=19;
                   law_headings=["Code Catala"; "Calcul de Moyenne"]} (
                 [||]) (fun (_: unit) -> true)
                 (fun (_: unit) -> o_length notes_))|])
         (fun (_: unit) -> false) (fun (_: unit) -> raise EmptyError))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "moyenne_test.catala_fr"; start_line=7; start_column=11;
        end_line=7; end_column=19;
        law_headings=["Code Catala"; "Calcul de Moyenne"]})) in
  let moy_: decimal =
    try
      (handle_default
         {filename = "moyenne_test.catala_fr"; start_line=9; start_column=12;
           end_line=9; end_column=15;
           law_headings=["Code Catala"; "Calcul de Moyenne"]}
         ([|(fun (_: unit) ->
               handle_default
                 {filename = "moyenne_test.catala_fr"; start_line=9;
                   start_column=12; end_line=9; end_column=15;
                   law_headings=["Code Catala"; "Calcul de Moyenne"]} (
                 [||]) (fun (_: unit) -> true)
                 (fun (_: unit) -> o_div_int_int total_ nb_notes_))|])
         (fun (_: unit) -> false) (fun (_: unit) -> raise EmptyError))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "moyenne_test.catala_fr"; start_line=9; start_column=12;
        end_line=9; end_column=15;
        law_headings=["Code Catala"; "Calcul de Moyenne"]})) in
  {Moyenne.moy = moy_}

let () =
  moyenne
  ()